#!/bin/bash
# This script needs to be run from the testsuite/scalar directory

# Allow user to specify particular target
if [ $# -gt 0 ]; then
  target=$1

  # Compile
  cd ../../puregauge/
  echo "Compiling polar_$target..."
  if ! make -f Make_scalar polar_$target >& /dev/null ; then
    echo "ERROR: polar_$target compilation failed"
    make -f Make_scalar polar_$target
    exit
  fi

  # Run
  cd ../testsuite/
  rm -f scalar/$target.out
  echo "Running polar_$target..."
  ../puregauge/polar_$target < in.$target > scalar/$target.out

  # Check
  cd scalar/
  d="`diff -I'Time' -I'time' -I'seconds' -I'^start' $target.ref $target.out`"
  if [ -n "$d" ] ; then   # Non-zero string length
    echo "$target.ref and $target.out differ:"
    echo "$d"
  else
    echo "PASS: polar_$target reproduces reference output"
  fi
  exit
fi

# Otherwise consider all active targets
# Compile
cd ../../puregauge/
for target in puregauge ; do
  echo "Compiling polar_$target..."
  if ! make -f Make_scalar polar_$target >& /dev/null ; then
    echo "ERROR: polar_$target compilation failed"
    make -f Make_scalar polar_$target
    exit
  fi
done

# Run
cd ../testsuite/
for target in puregauge ; do
  rm -f scalar/$target.out
  echo "Running polar_$target..."
  ../puregauge/polar_$target < in.$target > scalar/$target.out
done

# Check
cd scalar/
for target in puregauge ; do
  d="`diff -I'Time' -I'time' -I'seconds' -I'^start' $target.ref $target.out`"
  if [ -n "$d" ] ; then   # Non-zero string length
    echo "$target.ref and $target.out differ:"
    echo "$d"
    echo
  else
    echo "PASS: polar_$target reproduces reference output"
  fi
done
